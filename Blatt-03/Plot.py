import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from scipy.optimize import curve_fit


Zeit , Ort_x , Ort_y , Ort_z , V_x ,V_y , V_z = np.genfromtxt( 'Ergebnisse/Ergebnis_2_A_1.txt' , unpack=True)

plt.plot( Zeit , Ort_x ,'r-')
plt.grid()
plt.xlabel(r'$t/s$')
plt.ylabel(r'$x/m$')
plt.savefig("Plots/Plot_2_A_1.pdf")
plt.clf()

Zeit , Ort_x , Ort_y , Ort_z , V_x ,V_y , V_z  = np.genfromtxt( 'Ergebnisse/Ergebnis_2_A_2.txt' , unpack=True)

plt.plot( Ort_x , Ort_y  ,'r-')
plt.grid()
plt.xlabel(r'$x/m$')
plt.ylabel(r'$y/m$')
plt.savefig("Plots/Plot_2_A_2.pdf")
plt.clf()

plt.plot( Zeit , Ort_x  ,'r-')
plt.grid()
plt.xlabel(r'$t/s$')
plt.ylabel(r'$x/m$')
plt.savefig("Plots/Plot_2_A_3.pdf")
plt.clf()

Zeit , Energie = np.genfromtxt( 'Ergebnisse/Ergebnis_2_B_Energie.txt' , unpack=True)
plt.plot( Zeit , Energie)
plt.ylim(1.38e-10 , 1.4e-10)
plt.ylabel(r'$\Delta E$')
plt.xlabel(r'Zeit')
plt.grid()
plt.savefig("Plots/Plot_2_B_Energie.pdf")
plt.clf()

Breite , Amp , Zeit = np.genfromtxt( 'Ergebnisse/Ergebnis_2_B_Stabilitaet.txt' , unpack=True)
plt.errorbar( Breite , Amp ,  fmt='rx')
plt.xlabel(r'Breite')
plt.ylabel(r'Amplitude')
plt.grid()
plt.savefig("Plots/Plot_2_B_Stabilitaet.pdf")
plt.clf()

Breite , Amp , Zeit = np.genfromtxt( 'Ergebnisse/Ergebnis_2_B_Stabilitaet.txt' , unpack=True)
plt.errorbar( Breite , Amp ,  fmt='rx')
plt.ylim(0.98 , 1.01 )
plt.xlim(0 , 0.4)
plt.xlabel(r'Breite')
plt.ylabel(r'Amplitude')
plt.grid()
plt.savefig("Plots/Plot_2_B_Stabilitaet_Nah.pdf")
plt.clf()

Breite , Amp , Zeit = np.genfromtxt( 'Ergebnisse/Ergebnis_2_B_Stabilitaet.txt' , unpack=True)
plt.plot( Breite , Zeit , 'rx')
plt.xlabel(r'Zeit')
plt.ylabel(r'Amplitude')
#plt.legend(loc='best')
plt.grid()
plt.savefig("Plots/Plot_2_B_Stabilitaet_Zeit.pdf")
plt.clf()


Zeit , Ort_x , Ort_y , Ort_z , V_x ,V_y , V_z = np.genfromtxt( 'Ergebnisse/Ergebnis_4_A.txt' , unpack=True)
plt.grid()
plt.plot( Ort_x , Ort_y  ,'r-')
#plt.scatter(Ort_x , Ort_y , edgecolors = "" , c=range( len( Ort_x )) )
plt.xlabel(r'$x$')
plt.ylabel(r'$y$')
plt.gcf().set_size_inches(5 ,5 )
Zeit , Ort_x , Ort_y , Ort_z , V_x ,V_y , V_z = np.genfromtxt( 'Ergebnisse/Ergebnis_4_A_2.txt' , unpack=True)
plt.plot( Ort_x , Ort_y , '-b')
plt.savefig("Plots/Plots_4_A.pdf")
plt.close()

Zeit , Ort_x , Ort_y , Ort_z , V_x ,V_y , V_z = np.genfromtxt( 'Ergebnisse/Ergebnis_4_A.txt' , unpack=True)
fig = plt.figure()
ax = fig.add_subplot(111 , projection = '3d')
plt.plot( Ort_x , Ort_y , Zeit , '-b')
plt.show()
plt.savefig("Plots/Plots_4_A_Zeit.pdf")
plt.close()

Zeit , Ort_x , Ort_y , Ort_z  = np.genfromtxt( 'Ergebnisse/Ergebnis_4_BAHN.txt' , unpack=True)
fig = plt.figure()
ax = fig.add_subplot(111 , projection = '3d')
plt.plot( Ort_x , Ort_y , Zeit , '-b')
plt.show()
#plt.savefig("Plots/Plots_4_A_Zeit.pdf")
plt.clf()
